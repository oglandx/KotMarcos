@article{share_709_system,
	author = {I.D. Greenwald; M. Kane},
	pages = {128--133},
	title = {{The Share 709 System: Programming and Modification}},
	year = {1959},
	institution = {Inlernatwnal Business Machines Corporatzon, Poughkeepsze, New York},
	journal = {Journal of the ACM},
	number = {2},
	volume = {6},
}

@book{Abelson:1996:SIC:547755,
 author = {Abelson, Harold and Sussman, Gerald J.},
 title = {Structure and Interpretation of Computer Programs},
 year = {1996},
 isbn = {0262011530},
 edition = {2nd},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 

@Article{Dybvig1993,
author="Dybvig, R. Kent
and Hieb, Robert
and Bruggeman, Carl",
title="Syntactic abstraction in scheme",
journal="LISP and Symbolic Computation",
year="1993",
volume="5",
number="4",
pages="295--326",
abstract="Naive program transformations can have surprising effects due to the interaction between introduced identifier references and previously existing identifier bindings, or between introduced bindings and previously existing references. These interactions can result in inadvertent binding, or capturing, of identifiers. A further complication is that transformed programs may have little resemblance to original programs, making correlation of source and object code difficult. This article describes an efficient macro system that prevents inadvertent capturing while maintaining the correlation between source and object code. The macro system allows the programmer to define program transformations using an unrestricted, general-purpose language. Previous approaches to the capturing problem have been inadequate, overly restrictive, or inefficient, and the problem of source-object correlation has been largely unaddressed. The macro system is based on a new algorithm for implementing syntactic transformations and a new representation for syntactic expressions.",
issn="1573-0557",
doi="10.1007/BF01806308",
url="http://dx.doi.org/10.1007/BF01806308"
}

@article{Steele:1993:EL:155360.155373,
 author = {Steele,Jr., Guy L. and Gabriel, Richard P.},
 title = {The Evolution of Lisp},
 journal = {SIGPLAN Not.},
 issue_date = {March 1993},
 volume = {28},
 number = {3},
 month = mar,
 year = {1993},
 issn = {0362-1340},
 pages = {231--270},
 numpages = {40},
 url = {http://doi.acm.org/10.1145/155360.155373},
 doi = {10.1145/155360.155373},
 acmid = {155373},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{McIlroy:1960:MIE:367177.367223,
 author = {McIlroy, M. Douglas},
 title = {Macro Instruction Extensions of Compiler Languages},
 journal = {Commun. ACM},
 issue_date = {April 1960},
 volume = {3},
 number = {4},
 month = apr,
 year = {1960},
 issn = {0001-0782},
 pages = {214--220},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/367177.367223},
 doi = {10.1145/367177.367223},
 acmid = {367223},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@misc{c_preprocessor_macros,
  title = {Macros -- The C Preprocessor},
  howpublished = {\url{https://gcc.gnu.org/onlinedocs/cpp/Macros.html}},
  note = {Доступ осуществлён: 12.08.2016}
}

@inproceedings{Kohlbecker:1987:MDS:41625.41632,
 author = {Kohlbecker, E. E. and Wand, M.},
 title = {Macro-by-example: Deriving Syntactic Transformations from Their Specifications},
 booktitle = {Proceedings of the 14th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL '87},
 year = {1987},
 isbn = {0-89791-215-2},
 location = {Munich, West Germany},
 pages = {77--84},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/41625.41632},
 doi = {10.1145/41625.41632},
 acmid = {41632},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Clinger:1991:MW:99583.99607,
 author = {Clinger, William and Rees, Jonathan},
 title = {Macros That Work},
 booktitle = {Proceedings of the 18th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '91},
 year = {1991},
 isbn = {0-89791-419-8},
 location = {Orlando, Florida, USA},
 pages = {155--162},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/99583.99607},
 doi = {10.1145/99583.99607},
 acmid = {99607},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{Kernighan:1978:CPL:7519,
 author = {Kernighan, B. W. and Ritchie, D. M.},
 title = {The C Programming Language},
 year = {1978},
 isbn = {0-13-110163-3},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
} 

@MastersThesis{Skalski:2005,
    author = {Kamil Skalski},
    title = {{Syntax-extending and type-reflecting macros in and object-oriented language}},
    school = {Institute of Computer Science, University of Wroclaw},
    address = {Wroclaw},
    year = {2005},
}

@inproceedings{Kohlbecker:1986:HME:319838.319859,
 author = {Kohlbecker, Eugene and Friedman, Daniel P. and Felleisen, Matthias and Duba, Bruce},
 title = {Hygienic Macro Expansion},
 booktitle = {Proceedings of the 1986 ACM Conference on LISP and Functional Programming},
 series = {LFP '86},
 year = {1986},
 isbn = {0-89791-200-4},
 location = {Cambridge, Massachusetts, USA},
 pages = {151--161},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/319838.319859},
 doi = {10.1145/319838.319859},
 acmid = {319859},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@phdthesis{Herman:2010:TTH:1925552,
 author = {Herman, David},
 advisor = {Wand, Mitchell},
 title = {A Theory of Typed Hygienic Macros},
 year = {2010},
 isbn = {978-1-109-72932-0},
 note = {AAI3398847},
 publisher = {Northeastern University},
 address = {Boston, MA, USA},
} 

@misc{clinger91hygienic,
  author = "W. Clinger",
  title = "Hygienic macros through explicit renaming",
  text = "William Clinger. Hygienic macros through explicit renaming. LISP Pointers,
    4(4), 1991.",
  year = "1991",
  url = "citeseer.nj.nec.com/clinger91hygienic.html" 
}

@inproceedings{Bawden1999,
  abstract = {Quasiquotation is the technology commonly used in Lisp to write program-generating programs. This paper explains how quasiquotation works, why it works well, and what its limitations are. A brief history of quasiquotation is included.},
  author = {Bawden, Alan},
  booktitle = {Partial Evaluation and Semantic-Based Program Manipulation},
  interhash = {014f52b9318aa036f1ab5af5851c0e12},
  intrahash = {199c718239813697082c78606938e0ae},
  pages = {4-12},
  title = {Quasiquotation in Lisp},
  url = {citeseer.ist.psu.edu/bawden99quasiquotation.html},
  year = 1999
}

@TechReport{EPFL-REPORT-185242,
   abstract    = {We introduce quasiquotes for the Scala programming
                 language, which solve the problem of manual tree
                 construction and deconstruction. Included case studies
                 show that quasiquotes indeed are easier to work with than
                 existing tools for tree construction. When limitations of
                 current implementation are lifted quasiquotes will become
                 the ultimate tool for the tree manipulation.},
   affiliation = {EPFL},
   author      = {Shabalin, Denys and Burmako, Eugene and Odersky, Martin},
   details     = {http://infoscience.epfl.ch/record/185242},
   documenturl = {https://infoscience.epfl.ch/record/185242/files/QuasiquotesForScala.pdf},
   keywords    = {scala; quasiquotes; macros; meta-programming; ast},
   oai-id      = {oai:infoscience.epfl.ch:185242},
   oai-set     = {driver},
   pagecount   = {15},
   submitter   = {222982; 222982; 222982},
   title       = {Quasiquotes for {S}cala},
   unit        = {LAMP},
   year        = 2013
}


